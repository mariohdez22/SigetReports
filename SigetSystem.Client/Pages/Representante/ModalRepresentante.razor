@inject IRepresentanteService representanteService;
@inject IEstadoRepresentanteService estadoRepresentanteService;
@inject IOrganismoService organismoService;
<style>
    :root
    {
        --color-inputs: #afafe7;
    }
</style>

<h5 class="tituloModalAgregar">@titulo</h5>
<br />

<EditForm Model="representante" OnValidSubmit="OnValidSubmit"> 

    <DataAnnotationsValidator></DataAnnotationsValidator> 

    <div class="contenedorInputs">

        <div class="parteInputsA">
        
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-person-circle"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.Nombres" placeholder="Agregar Representante" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-telephone-fill"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.Celular" placeholder="Agregar Celular" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-envelope-fill"></i></span>
                <InputText type="email" class="form-control" @bind-Value="representante.Email" placeholder="Agregar Email" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-person-vcard-fill"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.DUI" placeholder="Agregar DUI" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>

        </div>

        <div class="parteInputsB">

            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-person-badge-fill"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.ComprobanteOIA" placeholder="Agregar Comprobante" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-person-badge-fill"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.Nickname" placeholder="Agregar Nickname" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-shield-lock-fill"></i></span>
                <InputText type="text" class="form-control" @bind-Value="representante.Contrasena" placeholder="Agregar Contraseña" style="border: 1px solid var(--color-inputs);"></InputText>
            </div>
            <div class="input-group mb-3">
                <span style="background-color: var(--color-inputs); border: 1px solid var(--color-inputs); color: white;" class="input-group-text" id="basic-addon1"><i class="bi bi-person-fill-gear"></i></span>
                <InputSelect class="form-select" @bind-Value="representante.IdOrganismo" style="border: 1px solid var(--color-inputs);">
                    <option value="@idOrganismoTexto">@txtOrganismoTexto</option>
                    @foreach (var item in listaOrganismo)
                    {
                        <option value="@item.IdOrganismo">@item.NombreOIA</option>
                    }
                </InputSelect>
            </div>
            <input type="hidden" value="@representante.IdEstadoRepresentante" />
        </div>

    </div>

    <br />

    <button type="submit" class="btn btn-success botonEjecutar"><i class="bi bi-check-circle-fill"></i>&nbsp;&nbspIngresar</button>

 </EditForm> 

@code
{
    [Parameter]
    public int idRepresentanteEditar { get; set; } = 0;

    string titulo = string.Empty;
    string btnTexto = string.Empty;
    string txtOrganismoTexto = string.Empty;
    int idOrganismoTexto = 0;

    //----------------------------------------------------------------------------------

    RepresentanteDTO representante = new RepresentanteDTO();

    List<EstadoRepresentanteDTO> listaEstado = new List<EstadoRepresentanteDTO>();

    List<OrganismoDTO> listaOrganismo = new List<OrganismoDTO>();

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    ParametrosPaginacion? pp;

    //----------------------------------------------------------------------------------

    protected override async Task OnInitializedAsync()
    {
        pp = new ParametrosPaginacion()
            {
                NumeroPagina = 1,
                TamañoPagina = sizeof(int),
                Orden = "Ascendente"
            };

        APIResponse<List<OrganismoDTO>> res = await organismoService.MostrarOrganismos(pp);

        if (idRepresentanteEditar != 0)
        {
            representante = await representanteService.BuscarRepresentante(idRepresentanteEditar);
            btnTexto = "Actualizar Registro";
            titulo = "Editar Representante";
        }
        else
        {
            btnTexto = "Agregar Registro";
            titulo = "Agregar Representante";
            representante.IdEstadoRepresentante = 1;
        }
       
        listaOrganismo = res.Resultado;
        listaEstado = await estadoRepresentanteService.MostrarEstadoRepresentante();
        
    }

    //----------------------------------------------------------------------------------

    private async Task OnValidSubmit()
    {
        string ValorDevuelto = "";

        if (idRepresentanteEditar == 0)
        {
            ValorDevuelto = await representanteService.CrearRepresentante(representante);
        }
        else
        {
            ValorDevuelto = await representanteService.EditarRepresentante(representante, idRepresentanteEditar);
        }

        if (ValorDevuelto == "Ejecucion Correcta")
        {
            await BlazoredModal.CloseAsync(ModalResult.Ok(ValorDevuelto));
        }
    }
}
