@page "/vistaRequisitosMenores"
@inject SweetAlertService Sweet;
@inject TituloService tituloService;
@inject IRequisitoMenorService requisitoService;
@inject IOrganismoService organismoService;
@inject IRepresentanteService representanteService;

<section class="ContenedorGeneral">

    <h5 class="indice">Inicio > Administracion de Requisitos Menores</h5>

    <section class="ContenidoPrincipal">

        <div class="barra">

            <div class="opciones">

                @* Apartado de Opciones mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@

                <div class="tituloOpciones">
                    <p>Opciones de los requisitos</p>
                </div>

                <div class="botonesOpciones">

                    <button class="informe"><i class="bi bi-file-earmark-plus"></i> Reporte</button>

                </div>

                <div class="tituloOpciones">
                    <p>Buscador</p>
                </div>

                <input type="text" @bind="valorBusqueda"  @oninput="CargarRequisitoBuscado" class="buscador" placeholder="Buscar Registro" />

                @* mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@

            </div>

            <div class="filtro">

                @* Apartado de Filtros mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@

                <div class="tituloFiltro">
                    <p>Filtros para los requisitos</p>
                </div>

                <div class="contenidoFiltro">

                    <div class="espacioFiltro">

                        <h5>Filtrar por orden:</h5>

                        <div class="contenedorChecks">

                            @* apartado checks 2 *@

                            <div class="contenCheck">
                                <input @onclick="@(() => OrdenarRequisitos("Ascendente"))" checked="@("Ascendente" == ordenSeleccionada)" type="checkbox" id="checkOrden1" name="checkOrden1" />
                                <label class="nombreCheck" for="checkOrden1">Ascendente</label>
                            </div>

                            <div class="contenCheck">
                                <input @onclick="@(() => OrdenarRequisitos("Descendente"))" checked="@("Descendente" == ordenSeleccionada)" type="checkbox" id="checkOrden2" name="checkOrden2" />
                                <label class="nombreCheck" for="checkOrden2">Descendente</label>
                            </div>

                        </div>

                    </div>
                    @*
                    <div class="espacioFiltro">

                        <h5>Filtrar por tipo:</h5>

                        <div class="contenedorChecks">

                            @* apartado checks 2 

                            <div class="contenCheck">
                                <input checked="" type="checkbox" id="" />
                                <label class="nombreCheck" for="">Tipado 1</label>
                            </div>

                        </div>

                    </div>

                    <div class="espacioFiltro">

                        <h5>Filtrar por estado:</h5>

                        <div class="contenedorChecks">

                             apartado checks 1 

                            <div class="contenCheck">
                                <input checked="" type="checkbox" id="" />
                                <label class="nombreCheck" for="">Estado 1</label>
                            </div>

                        </div>

            </div>*@

                </div>

                @* mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@

            </div>

        </div>

        <div class="contenido">

            @* Apartado de Contenido mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@
        @if(resRequisito?.Resultado != null)
            {
            @foreach(var item in resRequisito.Resultado)
            {
            <div class="tarjeta">

                <div class="tarjetaTitulos">

                    <div class="tituloA">
                        <p>@item.CodigoRequisito</p>
                    </div>

                    <div class="tituloB">
                        <p>@item.FechaRegistro</p>
                    </div>

                </div>

                <div class="tarjetaContenido">

                    <div class="perfil">

                        <div class="apartadoA">

                            <div class="texto">
                                <div class="iconoTexto">
                                    <i class="bi bi-building-fill"></i>
                                </div>
                                <p>@item.Organismo?.NombreOIA</p>
                            </div>

                            <div class="texto">
                                <div class="iconoTexto">
                                    <i class="bi bi-person-circle"></i>
                                </div>
                                <p>@item.Representante?.Nombres</p>
                            </div>

                            <div class="tituloChecks">
                                <p>Apartado Checks</p>
                            </div>

                        </div>

                        <div class="apartadoB">

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-check-circle-fill"></i>
                                </div>
                                <input class="mtp" checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-clipboard2-check-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-person-vcard-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-person-vcard"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-credit-card-2-front-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-person-vcard"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-card-heading"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-clipboard-plus-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-geo-alt-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-file-earmark-image-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                            <div class="checks">
                                <div class="iconoCheck">
                                    <i class="bi bi-pass-fill"></i>
                                </div>
                                <input checked="" type="checkbox" id="" />
                            </div>

                        </div>

                    </div>

                    <div class="extras">

                        <div class="textoExtra">
                            <div class="iconoExtra">
                                <i class="bi bi-person-vcard-fill"></i>
                            </div>
                            <div class="apartadoExtra">
                                <p>duiPropietario.pdf</p>
                            </div>
                        </div>

                        <div class="textoExtra">
                            <div class="iconoExtra">
                                <i class="bi bi-person-vcard"></i>
                            </div>
                            <div class="apartadoExtra">
                                <p>duiCliente.pdf</p>
                            </div>
                        </div>

                        <div class="textoExtra">
                            <div class="iconoExtra">
                                <i class="bi bi-person-vcard"></i>
                            </div>
                            <div class="apartadoExtra">
                                <p>duiElectricista.pdf</p>
                            </div>
                        </div>

                        <div class="textoExtra">
                            <div class="iconoExtra">
                                <i class="bi bi-card-heading"></i>
                            </div>
                            <div class="apartadoExtra">
                                <p>carnetElectricista.pdf</p>
                            </div>
                        </div>

                    </div>

                </div>

            </div>
                }
            }
            else
            {
                <p>No se encontro resultados</p>
            }
            @* mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm *@

        </div>

    </section>

    <section class="footer">

        <div class="paginacion">

            @* <PaginadoPersonal PaginaActual="@paginaActual"
            TotalPaginas="@totalPaginas"
            OnPageChanged="HandlePageChanged">
            </PaginadoPersonal> *@

        </div>

    </section>

</section>

@code
{
        // Objetos de modelos mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    private APIResponse<List<RequisitoMenorDTO>>? resRequisito;
    private List<OrganismoDTO>? listaOrganismos;
    private List<RepresentanteDTO>? listaRepresentante;

    // Variables con valores cambiantes mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    private int ID1 = 0;
    private int ID2 = 0;
    private string valorOrden = "Descendente";
    private string valorBusqueda = "";
    private string? ordenSeleccionada;
    private int? rangoSeleccionado;
    private int? estadoSeleccionado;

    // Variables para Paginacion mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    private int paginaActual = 1;
    private int tamanoPagina = 6;
    private int registrosActuales;
    private int totalPaginas;

    // Modal mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    // MetodoInicializador mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    protected override async Task OnInitializedAsync()
    {
        tituloService.AgregarTitulo("Administracion de Requisitos Mayores");

        ParametrosPaginacion parametros = new()
            {
                NumeroPagina = 1,
                TamañoPagina = tamanoPagina,
                Orden = "Ascendente",
                Buscar = valorBusqueda,
                ID1 = ID1,
                ID2 = ID2
            };

        await CargarPagina(paginaActual, 0, 0, "Descendente");
        var rOrg = await organismoService.MostrarOrganismos(parametros);
        var rRep = await representanteService.MostrarRepresentante(parametros);

        listaOrganismos = rOrg.Resultado;
        listaRepresentante = rRep.Resultado;
    }

    // Metodos Generales mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    private async Task OrdenarRequisitos(string valor)
    {
        if (ordenSeleccionada == valor)
        {
            ordenSeleccionada = null;
        }
        else
        {
            ordenSeleccionada = valor;
        }

        await CargarPagina(paginaActual, ID1, ID2, valor);
        valorOrden = valor;
    }

    private async Task CargarPagina(int numeroPagina, int ID1, int ID2, string orden)
    {
        ParametrosPaginacion parametros = new()
            {
                NumeroPagina = numeroPagina,
                TamañoPagina = tamanoPagina,
                Orden = orden,
                Buscar = valorBusqueda,
                ID1 = ID1,
                ID2 = ID2
            };

        resRequisito = await requisitoService.MostrarRequisitoMenor(parametros);
        registrosActuales = resRequisito.TotalRegistros;
        totalPaginas = (int)Math.Ceiling((double)registrosActuales / tamanoPagina);
        paginaActual = numeroPagina;
    }

    private async Task CargarRequisitoBuscado(ChangeEventArgs e)
    {
        try
        {
            valorBusqueda = e.Value.ToString();

            if (valorBusqueda != "")
            {
                await CargarPagina(paginaActual, 0, 0, valorOrden);
            }
            else
            {
                await CargarPagina(paginaActual, ID1, ID2, valorOrden);
            }
        }
        catch (InvalidOperationException ex)
        {
            Console.WriteLine($"Error al realizar la solicitud: {ex.Message}");
            throw;
        }
    }

    // Handlers mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|

    private async Task HandlePageChanged(int newPage)
    {
        paginaActual = newPage;
        await CargarPagina(newPage, ID1, ID2, valorOrden);
    }

    // Modals mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|
}